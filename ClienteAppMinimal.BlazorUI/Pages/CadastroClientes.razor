@page "/cadastro-clientes"

<div class="m-4">
    <h4>Cadastro de clientes</h4>
    <p>Preencha os campos para incluir um cliente.</p>
    <hr />

    @* Exibir mensagem *@
    @if (!string.IsNullOrEmpty(mensagem))
    {
        <div class="alert alert-primary"><strong>@mensagem</strong></div>
    }

    @* Estrutura do formulário Blazor *@
    <EditForm Model="clienteForm" OnValidSubmit="@OnSubmit">

        @* Ativar as validações do DataAnnotations *@
        <DataAnnotationsValidator />

        <div class="mb-3">
            <label>Nome do cliente:</label>
            <InputText @bind-Value="clienteForm.Nome" class="form-control" />
            <span class="text-danger">
                <ValidationMessage For="@(() => clienteForm.Nome)" />
            </span>
        </div>

        <div class="mb-3">
            <label>Email do cliente:</label>
            <InputText @bind-Value="clienteForm.Email" class="form-control" />
            <span class="text-danger">
                <ValidationMessage For="@(() => clienteForm.Email)" />
            </span>
        </div>

        <input type="submit" class="btn btn-success" value="Realizar Cadastro" />

    </EditForm>

</div>

@using ClienteAppMinimal.BlazorUI.Forms

@inject HttpClient Http

@code {

    private ClienteForm clienteForm = new ClienteForm();
    private string mensagem = string.Empty;

    public async Task OnSubmit()
    {
        var response = await Http.PostAsJsonAsync("api/v1/clientes", clienteForm);

        if (response.IsSuccessStatusCode)
        {
            mensagem = "Cliente cadastrado com sucesso!";
            clienteForm = new ClienteForm();
        }
        else
        {
            mensagem = "Erro ao cadastrar cliente.";
        }
    }
}
